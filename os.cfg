MEMORY {
    RAM: start = $0000, size = $4000, type = rw, define = yes, file = "";
    ROM: start = $8000, size = $8000, type = ro, fill = yes, fillval = $00, define = yes, file = %O;
}

SEGMENTS {
    STARTUP:  load = ROM, type = ro, define = yes;      # cc65 crt0 startup
    ZEROPAGE: load = RAM, type = zp, start = $0000;     # reserve $0000-$01FF
    ONCE:     load = ROM, type = ro, define = yes;      # Init-only code
    CODE:     load = ROM, type = ro, define = yes;
    RODATA:   load = ROM, type = ro, define = yes;
    DATA:     load = RAM, type = rw, start = $0200, define = yes;  # DATA starts at $0200
    BSS:      load = RAM, type = bss, align = $10, define = yes;
    VECTORS:  load = ROM, type = ro, start = $FFFA;     # NMI/RESET/IRQ vectors
}

FEATURES {
    CONDES: segment = RODATA,
            type = constructor,
            label = __CONSTRUCTOR_TABLE__,
            count = __CONSTRUCTOR_COUNT__;
    CONDES: segment = RODATA,
            type = destructor,
            label = __DESTRUCTOR_TABLE__,
            count = __DESTRUCTOR_COUNT__;
}

SYMBOLS {
    __STACKSIZE__:  type = export, value = $0200;                    # 512-byte C stack
    __STACKSTART__: type = export, value = __RAM_START__ + __RAM_SIZE__ - 1;  # Stack grows down from top of RAM
}
